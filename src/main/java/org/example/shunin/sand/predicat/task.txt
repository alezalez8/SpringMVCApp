1) С помощью реализации Predicat<String> реализуйте удаление со списка строк начинающихся с
определенной буквы. Например удалить все строки которые начинаются на букву F.
2) Используя реализацию Predicate<String> реализуйте удаление со списка строк, строки первая
буква которых задается отдельным массивом символов. Например если этот массив содержит
['h','a','t'] то со списка стоит удалить все строки которые начинаются с этих букв.
3) Используя реализацию Preticate<Cat> (в качестве Cat взять класс используемый в лекции) и
методы для логических функций, реализуйте удаление из списка Cat котов возраст которых
меньше определенного значения (задается как параметр), а имя по алфавиту идет после буквы
(задается так же как параметр). Например если первый параметр задан как 5, а второй как 'C' то
будет удален Cat [name=Timka, age=4], Cat [name=Kuzia, age=2].
4) Используя реализацию BiPredicate<Integer, String> реализуйте удаление из Map<Integer, String>
всех пар ключ-значение для которых длинна строки значения не равна ключу этого значения.
Например такая пара как {3: «Hello»} должна быть удалена так как длинна «Hello» не равна 3, а
пара вида {4: «Java»} останется.
5) Создайте такую реализацию IntPredicate которая будет возвращать true в случае когда сумма
цифр числа число четное. Например для 103 — вернет true, так 1+0+3 = 4.